{"ts":1354607119486,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"\n/**\n * Module dependencies.\n */\n\nvar express = require('express')\n  , routes = require('./routes')\n  , http = require('http')\n  , path = require('path')\n  , keyword = require('./models/keyword_list')\n  , inquiry = require('./models/inquiry_list')\n  , status = require('./models/status_list');\n\nvar app = express();\n\napp.configure(function(){\n  app.set('port', process.env.PORT || 3000);\n  app.set('views', __dirname + '/views');\n  app.set('view engine', 'jade');\n  app.use(express.favicon());\n  app.use(express.logger('dev'));\n  app.use(express.bodyParser());\n  app.use(express.methodOverride());\n  app.use(app.router);\n  app.use(express.static(path.join(__dirname, 'public')));\n});\n\napp.configure('development', function(){\n  app.use(express.errorHandler());\n});\n\n// ホーム\napp.get('/', function(req, res) {\n   res.redirect('/keyword/list');\n});\n \n// 一覧表示\napp.get('/keyword/list', function(req, res) {\n    var m_stat='1';\n    status.findOne({}, function(err, status) {\n        if(err) throw err;\n        m_stat=status.glasses;\n    });\n    keyword.find({}, function(err, keywords) {\n        if(err) throw err;\n        res.render('list', {title:'Address Book', keywords:keywords, m_stat:m_stat,pretty:true});\n    });\n});\n \n// 詳細表示\napp.get('/keyword/show/:id', function(req, res) {\n    keyword.findOne({_id:req.param('id')}, function(err, keyword) {\n        if(err) throw err;\n        res.render('show', {title:'keyword', keyword:keyword, pretty:true});\n    });\n});\n \n// 編集表示\napp.get('/keyword/edit/:id', function(req, res) {\n    keyword.findOne({_id:req.param('id')}, function(err, keyword) {\n        if(err) throw err;\n        res.render('edit', {title:'keyword(Edit)', keyword:keyword, pretty:true});\n    });\n});\n \n// 新規作成表示\napp.get('/keyword/new',  express.bodyParser(), function(req, res) {\n    inquiry.find({},function(err, inquiry) {\n        if(err) throw err;\n        res.render('new', {title:'keyword(New)',inquiries:inquiry, pretty:true});\n    });\n});\n \n// 更新アクション\napp.post('/keyword/update/:id', function(req, res) {\n    keyword.findById(req.param('id'), function(err, keyword) {\n        if(!keyword)\n            throw err;\n        else {\n            keyword.keyword1 = req.param('keyword1');\n            keyword.keyword2 = req.param('keyword2');\n            keyword.keyword3 = req.param('keyword3');\n            keyword.answer = req.param('answer');\n            keyword.face = req.param('face');\n            keyword.save(function(err) {\n                if(err)\n                    throw err;\n                else\n                    res.redirect('/keyword/show/' + keyword._id);\n            });\n        }\n    });\n});\n \n// 追加アクション\napp.post('/keyword/insert', function(req, res) {\n    var con = new keyword();\n    con.analys_type='K';\n    if(req.param('keyword2')!=''){\n        con.reply_type='C';\n    } else {\n        con.reply_type='S';\n    }\n    con.keyword1 = req.param('keyword1');\n    con.keyword2 = req.param('keyword2');\n    con.keyword3 = req.param('keyword3');\n    con.answer = req.param('answer');\n    con.face = req.param('face');\n    con.save(function(err) {\n        if(err) throw err;\n        res.redirect('/keyword/list');\n    });\n});\n \n// 削除アクション(キーワード)\napp.get('/keyword/delete/:id', function(req, res) {\n    keyword.remove({_id:req.param('id')}, function(err) {\n        if(err) throw err;\n        res.redirect('/keyword/list');\n    });\n});\n\n// 削除アクション(回答不能文)\napp.get('/inquiry/delete/:id', function(req, res) {\n    inquiry.remove({_id:req.param('id')}, function(err) {\n        if(err) throw err;\n        res.redirect('/keyword/new');\n    });\n});\n\n// 更新アクション(メガネ)\napp.get('/status/update/', function(req, res) {\n    status.findOne({}, function(err, status) {\n        if(!status)\n            throw err;\n        else {\n            if(status.glasses=='0'){\n                status.glasses = '1';\n            } else {\n                status.glasses= '0';\n            }\n            status.save(function(err) {\n                if(err)\n                    throw err;\n                else\n                    res.redirect('/');\n            });\n        }\n    });\n});\n\n\nhttp.createServer(app).listen(app.get('port'), function(){\n  console.log(\"Express server listening on port \" + app.get('port'));\n});\n"]],"start1":0,"start2":0,"length1":0,"length2":4215}]],"length":4215}
{"contributors":[],"silentsave":false,"ts":1354607179289,"patch":[[{"diffs":[[0,"ord2')!="],[1,"="],[0,"''){\n   "]],"start1":2763,"start2":2763,"length1":16,"length2":17}]],"length":4216,"saved":false}
